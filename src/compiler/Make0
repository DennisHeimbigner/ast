W=-Wd

T=testprim1

#TEST=-I . -I./testdata1 ${T}.proto
#TEST=-I./testdata1 addressbook.proto
TEST=-I. ${T}.proto

TOPDIR=d:/IdeaProjects/ast/src/compiler

PARSER=ProtobufParser.java

GRAMMAR=protobuf.y

SRC=\
    ProtobufActions.java ProtobufLexer.java $(PARSER) AST.java \
    AuxFcns.java Printer.java Debug.java  \
    ASTFactory.java ASTFactoryDefault.java ASTDefault.java \
    Semantics.java Generator.java \
    ProtobufSemantics.java \
    CSemantics.java CGenerator.java \
    Getopt.java LongOpt.java

COMPILERPATH=classes/unidate/protobuf/ast/compiler

CLASSES=$(SRC:%.java=$(COMPILERPATH)/%.class)

BUILDDIR=classes

.PHONEY: compile test

all: gen

clean::
	rm -f  $(PARSER) Protobuf.output
	rm -fr $(BUILDDIR)

compile: $(BUILDDIR) $(SRC) 
	javac -d $(BUILDDIR) $(SRC)

$(PARSER): $(GRAMMAR)
	rm -f ./tmp 
	bison -v -t -L Java $(GRAMMAR) -o ./$(PARSER)

# The sed operations are to fix some bugs in the generated java code
#	bison -v -t -L Java $(GRAMMAR) -o ./tmp
#	sed -e "s/(null,\ null)/(new Position())/" -e "s/public class Location/static public class Location/" <./tmp >$(PARSER)	

$(BUILDDIR):
	mkdir $(BUILDDIR)

fix::
	for f in $(SRC) ; do \
	    sed -e 's/ast.protobuf/unidata.protobuf.ast/g'  <save/$$f >./$$f ; \
	done

gen: compile
	javac -d $(BUILDDIR) -classpath $(BUILDDIR) Main.java
	java -cp $(BUILDDIR) Main ${W} $(TEST)

RTSRC=ast_runtime.c ast_internal.c

c:
	gcc -c -I. ${T}.c ${RTSRC}
	gcc -o ${T} ${T}.o ${RTSRC:.c=.o}

